Задачи за Мрежи и GUI

1.	Да се направи калкулатор за смятане на цели числа.
Трябва да има графичен интерфейс и следните функции:
•	Поле за числото (въвеждането на числото става само чрез натискане на бутон от интерфейса, не от клавиатурата);
•	Бутони с цифрите от 0 до 9;
•	Бутони с възможните операции: +, -, *, /, = ;
•	Бутон за изтриване на последната въведена цифра
•	Бутон за изчистване на цялото поле.
2.	DownloadAgent. 
Класът DownloadAgent има метод downloаdFile() с параметър URL от тип стринг със структура <host>/<source>. Ако URL не започва със стрринга “http://”, той се добавя към него. Да се използва URLConnection класа.
Методът downlosdFile да действа по следния начин:
•	Прави се URL.
•	Вика се openConnection() метода на класа URLConnection.
•	Вика се getInputStream() метода от сокета на сървъра и се чете от върнатия входен поток. Прочетеното се записва в указан от потребителя файл.
!! Да се използва написаното за задачата TransferObject от раздел вход/изход.
Да се подаде като host вътрешен и външен за мрежата сървър.
3.	Разговор между клиент и сървър.
Сървъра е инстанция на ServerSocket, а клиента – на Socket.
Какво прави сървъра:
3.1.	Стартира се на определен порт, на host – localhost.
3.2.	Приема клиента чрез метода accept().
3.3.	Изпраща по изходния поток на сокета на клиента съобщението: “Hello!”+<системната дата>.
Какво прави клиента:
3.4.	Свързва се към сървъра на определения порт.
3.5.	Прочита съобщението от сървъра.
3.6.	Изписва съобщението на конзолата.
3.7.	Затваря връзката със сървъра.
Когато клиента или сървъра се стартират, се отваря прозорец съдържащ текстово поле, в което се изписва съобщение след извършването на всяко от изброените действия.
При затваряне връзката със сървъра, клиента спира изпълнението си и в текстовото поле се изписва съобщение за това.
В прозореца на сървъра има бутон StopServer. При натискането му сървъра се спира и прозореца му се скрива.
4.	Информация за клиентите.
Сървъра: 
4.1.	Поддържа списък с клиенти.
4.2.	Когато приема нов клиен му изпраща съобщение, че е клиент №хх (или че досега са се свързали хх-1 на брой клиента).
4.3.	На другите свързани клиенти се изпраща съобщение, че клиент №хх се е свързал. За целта се стартира нова нишка с параметър – списъка с клиенти.
4.4.	Новия клиент се добавя към списъка с клиенти.

Клиента:
4.5.	Свързва се към сървъра.
4.6.	Прочита съобщението, което му казва кой по ред клиент е.
4.7.	Стартира безкраен цикъл за четене на съобщения.

Клиента не се изключва. Щом сървъра бъде спрян, в безкрайния цикъл на клиента се хвърля NoSocketException. Тогава клиента приключва изпълнението си.
При стартирането на сървъра се появява прозорец, съдържащ:
•	поле, в което се извежда съобщение всеки път, когато се включи нов клиент;
•	бутон за спиране на сървъра.
При стартирането на клиента се стартира прозорец, съдържащ:
•	бутон за свързване към сървъра;
•	текстово поле за извеждане на съобщенията от сървъра
5.	Реверсиране на съобщения.
Сървъра:
5.1.	Приема клиент.
5.2.	Праща wellcomeMessage.
5.3.	Стартира нова нишка, която в безкраен цикъл:
•	Прочита съобщение от клиента, като извиква readClientMessage():String метода.
•	Изпраща реверсирано съобщението, като извиква  writeRevеrsedMessage(String) метода.
Нишката се унищожава, когато клиента се разкачи.
	Клиента:
5.4.	Свързва се към сървъра.
5.5.	Прочита и изписва wellcomeMessage.
5.6.	Стартира цикъл за четене от клавиатурата довъвеждане на стринга “.”. Въвеждането на такъв стринг е сигнал за разкачане от сървъра. 
Ако стринга не е “сигналния”, въведеното се изпраща до сървъра. Щом от сървъра се получи резултата се изписва следното съобщение:
The reverse of [<въведено>] is [<резултат>].
При стартиране на сървъра се появява прозорец, в който се изписва съобщение за всяко изброено за сървъра действие.
При стартиране на клиента се появява прозорец, съдържащ: текстово поле за въвеждане на съобщения, бутон за изпращане на съобщението от текстовото поле, поле за извеждане на получените от сървъра съобщения.
За host да се използва localhost. Порта да е в границите от 7000 до 7020.