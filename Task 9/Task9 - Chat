Chat

Прочетете внимателно и СПАЗВАЙТЕ СТРИКТНО заданието!

Да се направи програма за моментално прадаване на събщения – chat. Състои се от два основни модула – клиентски и сървърен. 
Как действа клиента:
За да се свърже със сървъра потребителя на клиентския модул въвежда nickname и натиска бутона за свървзване в появила се пред него форма за логване. Nickname-а трябва да е уникален в сравнение с тези на вече свързаните потребители. Не се прави разлика между малки и големи букви. Забранени са символите “[” и “]”.
След натискане на бутона за свързване клиента изпраща до сървъра въведения от потребителя nickname и чака за отговор.
При неуспешен опит за свързване (върнат от сървъра отрицателен отговор) пред потребителя се появява прозорец със съобщение обясняващо, че е въведен невалиден nickname и че е необходимо да се опита отново.
След свързването със сървъра пред потребителя се появява прозорец съдържащ:
•	текстово поле за въвеждане на съобщение;
•	бутон за изпращане на съобщението от текстовото поле;
•	поле със писък на потребителите online;
•	поле за получените съобщения;
•	бутон за край на сесията.
Потребителя може да въвежда съобщение от един ред. Максималния брой символи е 200. След изпращането на съобщението всички свързани към сървъра потребители, дори и автора на съобщението, го получават.

В полето за online потребителите списъка се поддържа актуален чрез обработка на съобщения от сървъра. Тези съобщения указват на клиента да добави или премахне определен nickname от списъка.

В третото поле съобщенията се изписват във формата:
[<nickname на автора>]:<текст на съобщението>
Текста на съобщението започва винаги с тлавна буква.

При натискане на бутона за край на сесията клиента изпраща съобщение за край до сървъра и прекретява връзката с него.
Как действа сървърът:
Сървърът постоянно “слуша” за клиенти. Когато клиент се свърже сървъра прочита съобщение – заявка за свързване, съдържащо въеден от потребителя nickname. 
Ако полученото съобщение не е заявка за свързване връзката с клиента се прекратява.
Ако изпратения nickname НЕ е уникален ИЛИ съдържа някой от забранените символи, клиента НЕ е приет - изпраща се отрицателен отговор на заявката за свързване.
Ако изпратения nickname е уникален И НЕ съдържа забранени символи, клиента е приет - изпраща се потвърждение на заявката за свързване със съпътстващ “Welcome message” и:
•	изпраща се до клиента списъка с потребителите online и клиента се добавя към същия списък;
•	изпраща се до всички останали потребители известяващо съобщение, че потребител с nickname <избрания от потребителя nickname> се е свързал;
•	стартира се нишка за обработка на идващите от потребителя съобщения.
Нишката работи докато клиента не изпрати команда за край на сесията. Тогава:
•	клиента се изтрива от списъка с online потребителите;
•	връзката  с клиента се прекратява;
•	до всички останали потребители се изпраща съобщение, че клиент <nickname-а на клиента> е прекратил връзката.
При стартирането на сървъра на екрана се появява прозорец съдържащ:
•	текстово поле, в което се изписва съобщение при настъпването на всяко от значимите събития в дадения по-долу списък;
•	бутон за спиране на сървъра.
Структура на пакетите:
com.omisoft.chat.<username>
.client – съдържа класовете от клиентския модул;
.server – съдържа класовете от сървърния модул;
.clientmain – съдържа стартовия клас на клиентския модул;
.servermain – съдържа стартовия клас на сървърния модул;
com.omisoft.chat.common – съдържа общите за клиентския и сървърния модул класове;

Съдържание на клиентския модул:
LoginForm – реализира формата за свързване със сървъра.
ClientMainFrame – реализира основния прозорец на клиента.
ServerMessagesReadThread – приема идващите от сървъра съобщения.
ClientExecuteThread – изпълнява командите прочетени от ServerMessagesReadThread.
Съдържание на сървърния модул:
ServerMainThread – реализира основната нишка и интерфейса на сървъра.
ClientMessagesReadThread – приема съобщения идващи от свързан със сървъра клиент.
SendMessageThread – изпраща до всички online потребители прочетено от ClientMessagesReadThread съобщение.
OnlineUsersThread – изпраща до всички online потребители съобщение, че потребител <nickname на нов потребител> се е свързал.
Съдържание на пакета clientmain:
ClientStartClass – стартира клиентския модул.
Съдържание на пакета servermain:
ServerStartClass – стартира сървърния модул.
Съдържание на пакета common:
IServerMessages – съдържа константи дефиниращи набора от съобщения, които сървърът изпраща до клиентите.
IClientMessages - съдържа константи дефиниращи набора от съобщения, които всеки от клиентите изпраща до сървъра.

Списък на значимите събития, които се отразяват в интерфейса на сървъра:
•	свързване на нов клиент;
•	добавяне на клиента към списъка с online потребителите;
•	изпращането на последното съобщение, уведомяващо че клиент <nickname на новия клиент> се е свързал;
•	стартирането на нишката за обработка на идващите от новия клиент съобщения;
•	прекратяването на връзката на даден клиент  сървъра;
•	изпращането на последното съобщение, уведомяващо че клиент <nickname на разкачилият се клиент> е прекратил връзката със сървъра.
Набор команди в IServerMessages: INVALID_NICK, NICK_OK, MESSAGE, CLIENT_CONNECTED, CLIENT_DISCONNECTED.
Набор команди в IClientMessages: CONNECTION_ATTEMPT, DISCONNECT_CLIENT, CLIENT_MESSAGE.

Формата на съобщенията обменяни между клиента и сървъра е:
<команда>|<данни на командата>
където:
•	команда  е една от горе изброените команди;
•	| е разделител между командата и данните на командата;
•	данни на командата е nickname на потребител или съобщението от текстовото поле в главния прозорец на клиента.
